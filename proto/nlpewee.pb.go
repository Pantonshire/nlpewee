// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: nlpewee.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Language int32

const (
	Language_ENGLISH Language = 0
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "ENGLISH",
	}
	Language_value = map[string]int32{
		"ENGLISH": 0,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_nlpewee_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_nlpewee_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{0}
}

type Tag int32

const (
	Tag_L_PAREN       Tag = 0
	Tag_R_PAREN       Tag = 1
	Tag_COMMA         Tag = 2
	Tag_COLON         Tag = 3
	Tag_PERIOD        Tag = 4
	Tag_CLOSING_QUOTE Tag = 5
	Tag_OPENING_QUOTE Tag = 6
	Tag_NUMBER_SIGN   Tag = 7
	Tag_CURRENCY      Tag = 8
	Tag_CC            Tag = 9
	Tag_CD            Tag = 10
	Tag_DT            Tag = 11
	Tag_EX            Tag = 12
	Tag_FW            Tag = 13
	Tag_IN            Tag = 14
	Tag_JJ            Tag = 15
	Tag_JJR           Tag = 16
	Tag_JJS           Tag = 17
	Tag_LS            Tag = 18
	Tag_MD            Tag = 19
	Tag_NN            Tag = 20
	Tag_NNP           Tag = 21
	Tag_NNPS          Tag = 22
	Tag_NNS           Tag = 23
	Tag_PDT           Tag = 24
	Tag_POS           Tag = 25
	Tag_PRP           Tag = 26
	Tag_PRPS          Tag = 27
	Tag_RB            Tag = 30
	Tag_RBR           Tag = 31
	Tag_RBS           Tag = 32
	Tag_RP            Tag = 33
	Tag_SYM           Tag = 34
	Tag_TO            Tag = 35
	Tag_UH            Tag = 36
	Tag_VB            Tag = 37
	Tag_VBD           Tag = 38
	Tag_VBG           Tag = 39
	Tag_VBN           Tag = 40
	Tag_VBP           Tag = 41
	Tag_VBZ           Tag = 42
	Tag_WDT           Tag = 43
	Tag_WP            Tag = 44
	Tag_WPS           Tag = 45
	Tag_WRB           Tag = 46
)

// Enum value maps for Tag.
var (
	Tag_name = map[int32]string{
		0:  "L_PAREN",
		1:  "R_PAREN",
		2:  "COMMA",
		3:  "COLON",
		4:  "PERIOD",
		5:  "CLOSING_QUOTE",
		6:  "OPENING_QUOTE",
		7:  "NUMBER_SIGN",
		8:  "CURRENCY",
		9:  "CC",
		10: "CD",
		11: "DT",
		12: "EX",
		13: "FW",
		14: "IN",
		15: "JJ",
		16: "JJR",
		17: "JJS",
		18: "LS",
		19: "MD",
		20: "NN",
		21: "NNP",
		22: "NNPS",
		23: "NNS",
		24: "PDT",
		25: "POS",
		26: "PRP",
		27: "PRPS",
		30: "RB",
		31: "RBR",
		32: "RBS",
		33: "RP",
		34: "SYM",
		35: "TO",
		36: "UH",
		37: "VB",
		38: "VBD",
		39: "VBG",
		40: "VBN",
		41: "VBP",
		42: "VBZ",
		43: "WDT",
		44: "WP",
		45: "WPS",
		46: "WRB",
	}
	Tag_value = map[string]int32{
		"L_PAREN":       0,
		"R_PAREN":       1,
		"COMMA":         2,
		"COLON":         3,
		"PERIOD":        4,
		"CLOSING_QUOTE": 5,
		"OPENING_QUOTE": 6,
		"NUMBER_SIGN":   7,
		"CURRENCY":      8,
		"CC":            9,
		"CD":            10,
		"DT":            11,
		"EX":            12,
		"FW":            13,
		"IN":            14,
		"JJ":            15,
		"JJR":           16,
		"JJS":           17,
		"LS":            18,
		"MD":            19,
		"NN":            20,
		"NNP":           21,
		"NNPS":          22,
		"NNS":           23,
		"PDT":           24,
		"POS":           25,
		"PRP":           26,
		"PRPS":          27,
		"RB":            30,
		"RBR":           31,
		"RBS":           32,
		"RP":            33,
		"SYM":           34,
		"TO":            35,
		"UH":            36,
		"VB":            37,
		"VBD":           38,
		"VBG":           39,
		"VBN":           40,
		"VBP":           41,
		"VBZ":           42,
		"WDT":           43,
		"WP":            44,
		"WPS":           45,
		"WRB":           46,
	}
)

func (x Tag) Enum() *Tag {
	p := new(Tag)
	*p = x
	return p
}

func (x Tag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tag) Descriptor() protoreflect.EnumDescriptor {
	return file_nlpewee_proto_enumTypes[1].Descriptor()
}

func (Tag) Type() protoreflect.EnumType {
	return &file_nlpewee_proto_enumTypes[1]
}

func (x Tag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tag.Descriptor instead.
func (Tag) EnumDescriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{1}
}

type TokenizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Language Language `protobuf:"varint,2,opt,name=language,proto3,enum=nlpewee.Language" json:"language,omitempty"`
}

func (x *TokenizeRequest) Reset() {
	*x = TokenizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlpewee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeRequest) ProtoMessage() {}

func (x *TokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nlpewee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeRequest.ProtoReflect.Descriptor instead.
func (*TokenizeRequest) Descriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{0}
}

func (x *TokenizeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TokenizeRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_ENGLISH
}

type TokenizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sentences []*Sentence `protobuf:"bytes,1,rep,name=sentences,proto3" json:"sentences,omitempty"`
}

func (x *TokenizeResponse) Reset() {
	*x = TokenizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlpewee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeResponse) ProtoMessage() {}

func (x *TokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nlpewee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeResponse.ProtoReflect.Descriptor instead.
func (*TokenizeResponse) Descriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{1}
}

func (x *TokenizeResponse) GetSentences() []*Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

type Sentence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens   []*Token  `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Entities []*Entity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *Sentence) Reset() {
	*x = Sentence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlpewee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentence) ProtoMessage() {}

func (x *Sentence) ProtoReflect() protoreflect.Message {
	mi := &file_nlpewee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentence.ProtoReflect.Descriptor instead.
func (*Sentence) Descriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{2}
}

func (x *Sentence) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *Sentence) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Full *Text `protobuf:"bytes,1,opt,name=full,proto3" json:"full,omitempty"`
	Stem *Text `protobuf:"bytes,2,opt,name=stem,proto3" json:"stem,omitempty"`
	// Types that are assignable to PosTag:
	//	*Token_Tag
	//	*Token_Other
	PosTag isToken_PosTag `protobuf_oneof:"pos_tag"`
	Label  string         `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlpewee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_nlpewee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{3}
}

func (x *Token) GetFull() *Text {
	if x != nil {
		return x.Full
	}
	return nil
}

func (x *Token) GetStem() *Text {
	if x != nil {
		return x.Stem
	}
	return nil
}

func (m *Token) GetPosTag() isToken_PosTag {
	if m != nil {
		return m.PosTag
	}
	return nil
}

func (x *Token) GetTag() Tag {
	if x, ok := x.GetPosTag().(*Token_Tag); ok {
		return x.Tag
	}
	return Tag_L_PAREN
}

func (x *Token) GetOther() string {
	if x, ok := x.GetPosTag().(*Token_Other); ok {
		return x.Other
	}
	return ""
}

func (x *Token) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type isToken_PosTag interface {
	isToken_PosTag()
}

type Token_Tag struct {
	Tag Tag `protobuf:"varint,3,opt,name=tag,proto3,enum=nlpewee.Tag,oneof"`
}

type Token_Other struct {
	Other string `protobuf:"bytes,4,opt,name=other,proto3,oneof"`
}

func (*Token_Tag) isToken_PosTag() {}

func (*Token_Other) isToken_PosTag() {}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw     string `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Cleaned string `protobuf:"bytes,2,opt,name=cleaned,proto3" json:"cleaned,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlpewee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_nlpewee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{4}
}

func (x *Text) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Text) GetCleaned() string {
	if x != nil {
		return x.Cleaned
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlpewee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_nlpewee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_nlpewee_proto_rawDescGZIP(), []int{5}
}

func (x *Entity) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Entity) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

var File_nlpewee_proto protoreflect.FileDescriptor

var file_nlpewee_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x43,
	0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x6c, 0x70, 0x65,
	0x77, 0x65, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21,
	0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e,
	0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x66, 0x75, 0x6c,
	0x6c, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x48,
	0x00, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x22,
	0x32, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x65,
	0x61, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2a, 0x17, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x00,
	0x2a, 0xbc, 0x03, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x5f, 0x50, 0x41,
	0x52, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x43, 0x4f, 0x4c, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x45, 0x52, 0x49,
	0x4f, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x4f, 0x53, 0x49, 0x4e, 0x47, 0x5f,
	0x51, 0x55, 0x4f, 0x54, 0x45, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x45, 0x4e, 0x49,
	0x4e, 0x47, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x43, 0x10,
	0x09, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x44, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x54, 0x10,
	0x0b, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x58, 0x10, 0x0c, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x57, 0x10,
	0x0d, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x0e, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x4a, 0x10,
	0x0f, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4a, 0x52, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4a,
	0x53, 0x10, 0x11, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x53, 0x10, 0x12, 0x12, 0x06, 0x0a, 0x02, 0x4d,
	0x44, 0x10, 0x13, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4e, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x4e, 0x50, 0x10, 0x15, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4e, 0x50, 0x53, 0x10, 0x16, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x4e, 0x53, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x44, 0x54, 0x10, 0x18,
	0x12, 0x07, 0x0a, 0x03, 0x50, 0x4f, 0x53, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x50,
	0x10, 0x1a, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x52, 0x50, 0x53, 0x10, 0x1b, 0x12, 0x06, 0x0a, 0x02,
	0x52, 0x42, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x42, 0x52, 0x10, 0x1f, 0x12, 0x07, 0x0a,
	0x03, 0x52, 0x42, 0x53, 0x10, 0x20, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x50, 0x10, 0x21, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x59, 0x4d, 0x10, 0x22, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x4f, 0x10, 0x23, 0x12,
	0x06, 0x0a, 0x02, 0x55, 0x48, 0x10, 0x24, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x42, 0x10, 0x25, 0x12,
	0x07, 0x0a, 0x03, 0x56, 0x42, 0x44, 0x10, 0x26, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x42, 0x47, 0x10,
	0x27, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x42, 0x4e, 0x10, 0x28, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x42,
	0x50, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x42, 0x5a, 0x10, 0x2a, 0x12, 0x07, 0x0a, 0x03,
	0x57, 0x44, 0x54, 0x10, 0x2b, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x50, 0x10, 0x2c, 0x12, 0x07, 0x0a,
	0x03, 0x57, 0x50, 0x53, 0x10, 0x2d, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x52, 0x42, 0x10, 0x2e, 0x32,
	0x4a, 0x0a, 0x07, 0x4e, 0x4c, 0x50, 0x65, 0x77, 0x65, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x72, 0x65, 0x2f, 0x6e, 0x6c, 0x70, 0x65, 0x77, 0x65, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nlpewee_proto_rawDescOnce sync.Once
	file_nlpewee_proto_rawDescData = file_nlpewee_proto_rawDesc
)

func file_nlpewee_proto_rawDescGZIP() []byte {
	file_nlpewee_proto_rawDescOnce.Do(func() {
		file_nlpewee_proto_rawDescData = protoimpl.X.CompressGZIP(file_nlpewee_proto_rawDescData)
	})
	return file_nlpewee_proto_rawDescData
}

var file_nlpewee_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nlpewee_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nlpewee_proto_goTypes = []interface{}{
	(Language)(0),            // 0: nlpewee.Language
	(Tag)(0),                 // 1: nlpewee.Tag
	(*TokenizeRequest)(nil),  // 2: nlpewee.TokenizeRequest
	(*TokenizeResponse)(nil), // 3: nlpewee.TokenizeResponse
	(*Sentence)(nil),         // 4: nlpewee.Sentence
	(*Token)(nil),            // 5: nlpewee.Token
	(*Text)(nil),             // 6: nlpewee.Text
	(*Entity)(nil),           // 7: nlpewee.Entity
}
var file_nlpewee_proto_depIdxs = []int32{
	0, // 0: nlpewee.TokenizeRequest.language:type_name -> nlpewee.Language
	4, // 1: nlpewee.TokenizeResponse.sentences:type_name -> nlpewee.Sentence
	5, // 2: nlpewee.Sentence.tokens:type_name -> nlpewee.Token
	7, // 3: nlpewee.Sentence.entities:type_name -> nlpewee.Entity
	6, // 4: nlpewee.Token.full:type_name -> nlpewee.Text
	6, // 5: nlpewee.Token.stem:type_name -> nlpewee.Text
	1, // 6: nlpewee.Token.tag:type_name -> nlpewee.Tag
	2, // 7: nlpewee.NLPewee.Tokenize:input_type -> nlpewee.TokenizeRequest
	3, // 8: nlpewee.NLPewee.Tokenize:output_type -> nlpewee.TokenizeResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_nlpewee_proto_init() }
func file_nlpewee_proto_init() {
	if File_nlpewee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nlpewee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nlpewee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nlpewee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nlpewee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nlpewee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nlpewee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nlpewee_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Token_Tag)(nil),
		(*Token_Other)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nlpewee_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nlpewee_proto_goTypes,
		DependencyIndexes: file_nlpewee_proto_depIdxs,
		EnumInfos:         file_nlpewee_proto_enumTypes,
		MessageInfos:      file_nlpewee_proto_msgTypes,
	}.Build()
	File_nlpewee_proto = out.File
	file_nlpewee_proto_rawDesc = nil
	file_nlpewee_proto_goTypes = nil
	file_nlpewee_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NLPeweeClient is the client API for NLPewee service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NLPeweeClient interface {
	Tokenize(ctx context.Context, in *TokenizeRequest, opts ...grpc.CallOption) (*TokenizeResponse, error)
}

type nLPeweeClient struct {
	cc grpc.ClientConnInterface
}

func NewNLPeweeClient(cc grpc.ClientConnInterface) NLPeweeClient {
	return &nLPeweeClient{cc}
}

func (c *nLPeweeClient) Tokenize(ctx context.Context, in *TokenizeRequest, opts ...grpc.CallOption) (*TokenizeResponse, error) {
	out := new(TokenizeResponse)
	err := c.cc.Invoke(ctx, "/nlpewee.NLPewee/Tokenize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NLPeweeServer is the server API for NLPewee service.
type NLPeweeServer interface {
	Tokenize(context.Context, *TokenizeRequest) (*TokenizeResponse, error)
}

// UnimplementedNLPeweeServer can be embedded to have forward compatible implementations.
type UnimplementedNLPeweeServer struct {
}

func (*UnimplementedNLPeweeServer) Tokenize(context.Context, *TokenizeRequest) (*TokenizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Tokenize not implemented")
}

func RegisterNLPeweeServer(s *grpc.Server, srv NLPeweeServer) {
	s.RegisterService(&_NLPewee_serviceDesc, srv)
}

func _NLPewee_Tokenize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLPeweeServer).Tokenize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlpewee.NLPewee/Tokenize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLPeweeServer).Tokenize(ctx, req.(*TokenizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NLPewee_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nlpewee.NLPewee",
	HandlerType: (*NLPeweeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Tokenize",
			Handler:    _NLPewee_Tokenize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nlpewee.proto",
}
